==============================
How to use 7-base_geometry.py
==============================

This library has a class ``BaseGeometry``.
It has 2 instance methods
``area()`` which raises an exception.
``integer_validator(name, value)`` which validates the value.

Importing the module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

creating an instance of the class:
	>>> bg = BaseGeometry()

regular use of integer_validator() method:
	>>> bg.integer_validator("my_int", 12)

passing 0 as value:
	>>> bg.integer_validator("my_int", 0)
	Traceback (most recent call last):
	ValueError: my_int must be greater than 0

passing negative number as value:
	>>> bg.integer_validator("my_int", -2)
	Traceback (most recent call last):
	ValueError: my_int must be greater than 0

passing a string as value:
	>>> bg.integer_validator("my_int", "2")
	Traceback (most recent call last):
	TypeError: my_int must be an integer

passing a float as value:
	>>> bg.integer_validator("my_int", 5.4)
	Traceback (most recent call last):
	TypeError: my_int must be an integer

checking for float overflow:
	>>> bg.integer_validator("my_int", float('inf'))
	Traceback (most recent call last):
	TypeError: my_int must be an integer

checking for is NaN:
	>>> bg.integer_validator("my_int", 'NaN')
	Traceback (most recent call last):
	TypeError: my_int must be an integer

passing more than 2 args:
	>>> bg.integer_validator("my_int", 12, 4)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

passing a tuple:
	>>> bg.integer_validator("my_int", (0))
	Traceback (most recent call last):
	ValueError: my_int must be greater than 0
	>>> bg.integer_validator("my_int", (0, 2))
	Traceback (most recent call last):
	TypeError: my_int must be an integer

passing a list:
	>>> bg.integer_validator("my_int", [1])
	Traceback (most recent call last):
	TypeError: my_int must be an integer

performing math operation:
	>>> bg.integer_validator("my_int", 4 + 5)

using the area() method:
	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented
	>>> bg.area(2)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 2 were given

passing only 1 arg to integer_validator() method:
	>>> bg.integer_validator("my_int")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

passing 0 arg:
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
